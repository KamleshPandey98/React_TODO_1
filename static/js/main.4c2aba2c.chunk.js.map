{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["App","useState","data","localStorage","getItem","newItem","list","JSON","parse","getLocalData","values","setValues","isAddBtnTxt","setIsAddBtnTxt","itemToUpdate","setItemToUpdate","useEffect","setItem","stringify","src","logo","width","height","className","type","placeholder","size","required","value","style","onChange","e","input","target","onClick","todoValue","id","Date","now","valuee","isDone","push","find","element","index","addItem","disabled","length","map","item","name","checked","updatedList","filter","deleteItem","editTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAAe,MAA0B,iC,eCwJ1BA,EApJH,WASV,IATgB,EAgBYC,mBAPP,WACnB,IAAMC,EAAOC,aAAaC,QAAQ,UAClC,OAAOF,EACH,CAAEG,QAAS,GAAIC,KAAMC,KAAKC,MAAMN,IAChC,CAAEG,QAAS,GAAIC,KAAM,IAGUG,IAhBrB,mBAgBTC,EAhBS,KAgBDC,EAhBC,KAiBRN,EAAkBK,EAAlBL,QAASC,EAASI,EAATJ,KAjBD,EAkBsBL,oBAAS,GAlB/B,mBAkBTW,EAlBS,KAkBIC,EAlBJ,OAmBwBZ,mBAAS,IAnBjC,mBAmBTa,EAnBS,KAmBKC,EAnBL,KAqBhBC,qBAAU,WAEJb,aAAac,QAAQ,SAAUV,KAAKW,UAAUZ,MAEjD,CAACI,EAAOJ,OAyDX,OACE,gCACE,qBAAKa,IAAKC,EAAMC,MAAM,MAAMC,OAAO,MAAMC,UAAU,SACnD,oBAAIA,UAAU,YAAd,gCACA,sBAAKA,UAAU,YAAf,4BAEE,uBACA,uBACEC,KAAK,OACLD,UAAU,GACVE,YAAY,eACZC,KAAM,GACNC,UAAQ,EACRC,MAAOlB,EAAOL,QACdwB,MAAO,CAAEP,OAAQ,QACjBQ,SAAU,SAACC,GAAD,OAnCCC,EAmCgBD,EAAEE,OAAOL,WAlC1CjB,EAAU,2BAAKD,GAAN,IAAcL,QAAS2B,KADhB,IAACA,KAqCb,wBACET,UAAU,UACVW,QAAS,kBA1ED,SAACC,GACf,GAAiB,MAAbA,EAAmB,CACrB,GAAIvB,EAAa,CACf,IAAMP,EAAU,CACd+B,GAAIC,KAAKC,MACTC,OAAQJ,EACRK,QAAQ,GAEJlC,EAAI,YAAOI,EAAOJ,MACxBA,EAAKmC,KAAKpC,GACVM,EAAU,CACRN,QAAS,GACTC,cAGFA,EAAKoC,MAAK,SAACC,EAASC,GAClB,GAAID,EAAQP,IAAMtB,EAAasB,GAC7B,OAAQ9B,EAAKsC,GAAL,2BAAmBD,GAAnB,IAA4BJ,OAAQlC,OAGhDM,EAAU,CAAEN,QAAS,GAAIC,KAAK,YAAKA,KAErCO,GAAe,IAoDIgC,CAAQnC,EAAOL,UAC9ByC,UAAWpC,EAAOL,QAAQ0C,OAH5B,SAKGnC,EAAc,WAAa,gBAE9B,qBAAKW,UAAU,OAAf,SACE,+BACGb,EAAOJ,KAAK0C,KAAI,SAACC,GAChB,OACE,+BACE,uBACEzB,KAAK,WACL0B,KAAK,SACLC,QAASF,EAAKT,OACdV,SAAU,kBAjDVM,EAiDyBa,EAAKb,GAhD9C9B,EAAKoC,MAAK,SAACC,EAASC,GAClB,GAAID,EAAQP,IAAMA,EAChB,OAAQ9B,EAAKsC,GAAL,2BAAmBD,GAAnB,IAA4BH,QAASG,EAAQH,iBAGzD7B,EAAU,2BAAKD,GAAN,IAAcJ,KAAK,YAAKA,MANlB,IAAC8B,KAmDDa,EAAKV,OACN,wBACEf,KAAK,SACLD,UAAU,MACVW,QAAS,kBApER,SAACE,GAClB,IACMgB,EADI,YAAO1C,EAAOJ,MACC+C,QAAO,SAACJ,GAAD,OAAUA,EAAKb,IAAMA,KACrDzB,EAAU,2BACLD,GADI,IAEPJ,KAAM8C,KA+DuBE,CAAWL,EAAKb,KAHjC,oBAOA,wBACEZ,KAAK,SACLD,UAAU,MACVW,QAAS,kBArDV,SAACe,GAChBlC,EAAgBkC,GAChBtC,EAAU,2BAAKD,GAAN,IAAcL,QAAS4C,EAAKV,UACrC1B,GAAe,GAkDgB0C,CAASN,IAH1B,oBAfOA,EAAKb,OAyBlB,+BACE,uBAAOZ,KAAK,WAAW0B,KAAK,GAAGd,GAAG,KADpC,yCCtIZoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4c2aba2c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { React, useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nconst App = () => {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     newItem: \"\",\n  //     list: [],\n  //   };\n  // }\n\n  const getLocalData = () => {\n    const data = localStorage.getItem(\"myTodo\");\n    return data\n      ? { newItem: \"\", list: JSON.parse(data) }\n      : { newItem: \"\", list: [] };\n  };\n\n  const [values, setValues] = useState(getLocalData());\n  const { newItem, list } = values;\n  const [isAddBtnTxt, setIsAddBtnTxt] = useState(true);\n  const [itemToUpdate, setItemToUpdate] = useState({});\n\n  useEffect(() => {\n    newItem\n      ? localStorage.setItem(\"myTodo\", JSON.stringify(list))\n      : localStorage.setItem(\"myTodo\", JSON.stringify(list));\n  }, [values.list]);\n\n  const addItem = (todoValue) => {\n    if (todoValue != null) {\n      if (isAddBtnTxt) {\n        const newItem = {\n          id: Date.now(),\n          valuee: todoValue,\n          isDone: false,\n        };\n        const list = [...values.list];\n        list.push(newItem);\n        setValues({\n          newItem: \"\",\n          list,\n        });\n      } else {\n        list.find((element, index) => {\n          if (element.id == itemToUpdate.id) {\n            return (list[index] = { ...element, valuee: newItem });\n          }\n        });\n        setValues({ newItem: \"\", list: [...list] });\n      }\n      setIsAddBtnTxt(true);\n    }\n  };\n\n  const deleteItem = (id) => {\n    const list = [...values.list];\n    const updatedList = list.filter((item) => item.id != id);\n    setValues({\n      ...values,\n      list: updatedList,\n    });\n  };\n\n  const userInput = (input) => {\n    setValues({ ...values, newItem: input });\n  };\n\n  const taskDone = (id) => {\n    list.find((element, index) => {\n      if (element.id == id) {\n        return (list[index] = { ...element, isDone: !element.isDone });\n      }\n    });\n    setValues({ ...values, list: [...list] });\n  };\n\n  const editTask = (item) => {\n    setItemToUpdate(item);\n    setValues({ ...values, newItem: item.valuee });\n    setIsAddBtnTxt(false);\n  };\n\n  // const render = () => {\n  return (\n    <div>\n      <img src={logo} width=\"100\" height=\"100\" className=\"logo\" />\n      <h1 className=\"app-title\">Kamlesh's ToDo App</h1>\n      <div className=\"container\">\n        Add an Item....\n        <br />\n        <input\n          type=\"text\"\n          className=\"\"\n          placeholder=\"Write a Todo\"\n          size={30}\n          required\n          value={values.newItem}\n          style={{ height: \"30px\" }}\n          onChange={(e) => userInput(e.target.value)}\n        />\n        <button\n          className=\"add-btn\"\n          onClick={() => addItem(values.newItem)}\n          disabled={!values.newItem.length}\n        >\n          {isAddBtnTxt ? \"ADD TODO\" : \"UPDATE TODO\"}\n        </button>\n        <div className=\"list\">\n          <ul>\n            {values.list.map((item) => {\n              return (\n                <li key={item.id}>\n                  <input\n                    type=\"checkbox\"\n                    name=\"isDone\"\n                    checked={item.isDone}\n                    onChange={() => taskDone(item.id)}\n                  />\n                  {item.valuee}\n                  <button\n                    type=\"button\"\n                    className=\"btn\"\n                    onClick={() => deleteItem(item.id)}\n                  >\n                    Delete\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn\"\n                    onClick={() => editTask(item)}\n                  >\n                    Edit\n                  </button>\n                </li>\n              );\n            })}\n            <li>\n              <input type=\"checkbox\" name=\"\" id=\"\" />\n              React TODO Application.\n              {/* <button className=\"btn\">Delete</button> */}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n  // };\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}